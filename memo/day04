리스트 : 배열 리스트
         연결 리스트 (포인터로 연결 --> JAVA에서는 reference)
         --> 새롭게 들어온 노드가 기존에 있던 노드에게 연결 요청한다.
         
클래스의 3가지 속성
1. 필드
2. 생성자
3. 메소드(함수)

private을 선언 했을 때 같은 클래스 내에서만 접근 가능(은닉화 가능)
private을 선언 안했을 때 같은 패키지에서 접근 가능

꼬리 노드(Tail Node) : 다음 노드의 NULL을 참조한다.

compareTo() : 두개의 값을 비교하여 int 값으로 반환해주는 함수이다.
기준 값과 비교대상이 동일한 값일 경우 0
기준 값이 비교대상 보다 작은 경우 -1
기준 값이 비교대상 보다 큰 경우 1
ex) x.compareTo(y); // x = 1, y = 2 라고 가정 --> -1

head.data
    노드의 필드 data는 데이터 자체를 의미하는 것이 아니라 데이터에 대한 참조이다.
head = null
head.next = null
head.next.next = null
    헤드노드는 항상 고정되어 있다.

// 다음 노드가 존재하지 않을 때
if(a.next == null) {
    System.out.println("더이상 연결된 노드가 없습니다.");
}

toString()
1. 결합
2. 새로운 문자열 생성
3. 서로 다른 클래스에서 문자열을 결합시 
toString()을 이용하여야 한다.
(단, 각각의 클래스에서는 결합하고자 하는
문자열은 각각 toString() 선언되어야 한다.)
