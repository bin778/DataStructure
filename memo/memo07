이번 주 tree / heap 이론 설명
10월 9일 graph 이론 설명

1. 트리(tree) => 나무 자료 구조
1 : N의 관계, 비선형 구조
트리 노드는 왼쪽부터 기준이 된다.
  1) 계층을 이루고 있다.
  2) root node는 시작을 의미
  3) 다음 노드는 여러개 존재할 수 있지만 이전 노드는 무조건 1개
  => 코딩 테스트 문제에서 거의 이진 트리 문제가 출제됨
  
root는 레벨0 으로 시작 하는데 레벨이 낮을 수록 상위 노드이다.
간선(edge) : 노드와 노드 간의 관계를 연결하는 선

부모 노드 : 다른 노드에 비해 root가 높은 상위 노드
=> 루트 노드 : 노드 중 가장 root가 높아 부모 노드가 없는 노드
자식 노드 : 다른 노드에 비해 root가 낮은 하위 노드
=> 단말 노드 : 노드 중에 가장 root가 낮아 자식 노드가 없는 노드
트리는 루트 노드를 제거하여 포리스트(forest) 구조화 한다.

트리의 모든 노드의 차수는 2 이하로 제한된다.
=> 차수(degree) : 각 노드에서 뻗어나온 가지의 수
=> 공백노드 : 차수가 없는 노드

각 트리 노드들은 부모-자식 관계로 연결되어 있다. 
트리 노드는 부모만 될 수 있고, 자식만 될 수 있고, 부모와 자식 둘다 될 수도 있다.

이진 트리의 서브 트리 구조
이진 트리는 왼쪽 서브 트리와 오른쪽 서브 트리로 나누어진다. 

노드 ===> 이진트리로 변환
1. 왼쪽 노드를 제외한 모든 형제 노드의 간선을 잘라준다.
2. 같은 레벨끼리 형제 노드의 간선을 연결한다.
3. 적절한 각도로 트리를 회전시킨다.(보통 45도로 회전함)
4. 회전한 트리를 이진 트리 모양으로 재배치시킨다.
