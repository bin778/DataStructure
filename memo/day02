자료구조 / 알고리즘 ===> 배열 ==> 리스트, 스택, 큐, 트리 
		      String ==> toString()
toString() : 배열의 요소들을 문자열로 조합하여 반환

배열(Array) : 데이터의 묶음
	같은 종류의 타입 ==> 코드(해석)의 가독성을 높여준다.
	
	int[] arr;
	int arr[];

	같은 자료형 ==> 메모리 상에 연속적으로 나열한 형태

	{ 'A', 'B', 'C', 'D' } ==> "ABCD"
	
	배열의 변수 ==> 참조 변수
	문자열 String str ==> 참조 변수

래퍼 클래스 : 기본 자료형에 해당하는 데이터를 객체로 포장해주는 클래스
int ==> Integer

int num; ==> 메모리 공간을 할당받는다.
int[] arr; ==> 주소값을 할당받는다. 처음에는 null을 가진다.
즉, 배열을 선언하면 이것은 어떠한 메모리 주소 값을 가지는 형태이다.

int arr = new int[3];

참조 타입 ==> 기본값은 null
 boolean == false
integer, float, char ==> 0
long ==> 0L

배열 사용시 for, while, do-while, foreach, (go ~ to : 사용 X)

배열의 복사 : 정적 배열이기 때문 (배열의 크기를 변경할 수 없다는 의미는 ==> 배열이 생성(선언)된 시점)
==> 새로운 배열을 만들고 기존의 값들을 재 배열

int[][] arr = new int[2][1]; // 행2, 열1

ArrayList
get메소드에 있는 모든 것은 상수이다.

public E get(int index) {
	if(index < 0 || index >= size) {
		throw new IndexOutOfBoundsException();
	}
	return array[index];
}

public E set(int index, E element) {
	E e = get(index);
	array[];
	return e;
}

int a = 10;
final int A = 10;
PI = 3.141592;
