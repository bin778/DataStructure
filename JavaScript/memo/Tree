트리(Tree)는 단방향 그래프의 한 구조로, 하나의 뿌리로부터 가지가 사방으로 뻗은 형태가 나무와 닮아 있다고 해서 트리 구조라고 부른다.
데이터를 순차적으로 나열시킨 선형 구조가 아니라, 하나의 데이터 아래에 여러 개의 데이터가 존재할 수 있는 비선형 구조로, 아래로만 뻗어나가기 때문에 사이클이 없다.
즉, 사이클이 없는 하나의 연결 그래프라고 할 수 있다.

트리 자료구조 용어
- 노드(Node): 트리 구조를 이루는 모든 개별 데이터
- 루트(Root): 트리 구조의 시작점이 되는 노드
- 부모 노드(Parent node): 두 노드가 상하관계로 연결되어 있을 때 상대적으로 루트에서 가까운 노드
- 자식 노드(Child node): 두 노드가 상하관계로 연결되어 있을 때 상대적으로 루트에서 먼 노드
- 리프(Leaf): 트리 구조의 끝 지점이며 자식 노드가 없는 노드
- 깊이(depth): 루트~하위 계층의 특정 노드까지의 깊이
ex) root = 0 / Q,R = 1 / A,B,C,D = 2 ...
- 레벨(level): 같은 깊이를 가지고 있는 노드를 묶어서 레벨로 표현할 수 있으며, 같은 레벨에 나란히 있는 노드를 형제노드(Slibling Node)라고 한다.
ex) P = 1 / Q,R = 2 / A,B,C,D = 3 ...
- 높이(Height): 리프 노드를 기준으로 루트까지의 높이를 표현할 수 있다.
ex) E,F,G,B,H,I,D = 0 / L,M = 1 / A,C = 2 / Q,R = 3 / P = 4
- 서브 트리: 큰 트리 내부의 트리구조를 갖춘 작은 트리를 의미한다.
ex) (L,E,F,G) / (Q,A,B) / (M,H,I) / (R,C,D) / (R,C,D,M,H,I) / ...

사용 예시
컴퓨터 디렉터리 구조: 어떤 프로그램이나 파일을 찾을 때, 바탕화면 폴더 또는 다운로드 폴더 등에서 다른 폴더에 진입하고, 그 안에서 또 다른 폴더에 진입하는 식으로 찾는데, 모든 폴더는 루트 폴더/에서 시작되어 가지를 뻗어나가는 형태이다.
월드컵 토너먼트 대진표
가계도 및 조직도

이진 트리는 트리 구조 중 특수한 경우로, 자식 노드가 두개인 트리를 뜻한다. 자식 노드가 두개이기 대문에 자식 노드는 왼쪽 또는 오른쪽으로 구분할 수 있다.
한편, 이진 트리는 자료의 삽입, 삭제 방법에 따라 정 이진 트리(Full binary tree), 완전 이진 트리(Complete binary tree), 포화 이진 트리(Perfect binary tree)로 나뉜다.
- 정 이진 트리: 각 노드가 0 개 혹은 2 개의 자식 노드를 갖는 경우
- 완전 이진 트리: 마지막 레벨을 제외한 모든 노드가 가득 차 있어야 하고, 마지막 레벨의 노드는 전부 차 있지 않아도 되지만 왼쪽이 채워져 있는 경우
- 포화 이진 트리: 정 이진 트리이면서 완전 이진 트리인 경우. 모든 리프 노드의 레벨이 동일하고, 모든 레벨이 가득 채워져 있어야 됨.

      1
     /  \
    2     3
   /  \  /  \
  4   5  6   7
 / \ / \  \   \
8  9 10 11 13  14

트리 순회 알고리즘
트리 순회(Tree Traversal)는 특정 목적을 위해 트리의 모든 노드를 한 번씩 방문하는 것이다. 트리 노드를 순회하는 방법은 루트 노드를 언제 거치느냐에 따라서 세 가지로 나뉜다.
- 전위 순회: 루트에서 시작해 왼쪽의 노드들을 순차적으로 둘러본 뒤, 왼쪽의 노드 탐색이 끝나면 오른쪽 노드를 탐색을 하는 방식. (1→2→4→8→9→5→10→11→3→6→13→7→14)
- 중위 순회: 제일 왼쪽 끝에 있는 노드부터 순회하기 시작하여, 루트를 기준으로 왼쪽에 있는 노드의 순회가 끝나면 루트를 거쳐 오른쪽에 있는 노드로 이동하여 마저 탐색하는 방식. (8→4→9→2→10→5→11→1→13→6→3→14→7)
- 후위 순회: 제일 왼쪽 끝에 있는 노드부터 순회하기 시작하여, 루트를 거치지 않고 오른쪽으로 이동해 순회한 뒤, 제일 마지막에 루트를 방문하는 방식. (8→9→4→10→11→5→2→13→6→14→7→3→1)
