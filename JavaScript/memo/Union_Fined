Union-Find(합집합 찾기)
Union-Find는 대표적인 그래프 알고리즘이며 서로소 집합(Disjoin-Set) 알고리즘이라고도 부른다. 
두 개의 노드를 선택해서 해당 노드들이 서로 같은 그래프에 속하는지 판별하는 알고리즘이다.

처음 8개의 노드가 무분별하게 존재한다고 가정한다.
모두 연결되지 않고 각각 자기 자신만을 요소로 갖고 있을 때 아래와 같이 표현할 수 있다.
노드 번호: [1, 2, 3, 4, 5, 6, 7, 8]
부모 노드: [1, 2, 3, 4, 5, 6, 7, 8]

1번 노드와 2번 노드가 연결되면 2번 노드의 부모 노드 번호(인덱스)에는 "1"이 할당되고 아래 표처럼 표현할 수 있다.
부모 노드를 합칠 때는 일반적으로 더 작은 값으로 합치고 이것을 Union이라고 부른다.
노드 번호: [1, 2, 3, 4, 5, 6, 7, 8]
부모 노드: [1, 1, 3, 4, 5, 6, 7, 8]

2번 노드와 3번 노드가 연결되면 마찬가지로 3번 노드의 부모 노드 번호(인덱스)에는 "2"가 할당되고 아래 표처럼 표현할 수 있다.
노드 번호: [1, 2, 3, 4, 5, 6, 7, 8]
부모 노드: [1, 1, 2, 4, 5, 6, 7, 8]

하지만 1번 노드와 3번 노드가 연결되었는지 확인 작업이 필요하다. 
3번 노드의 현재 부모 노드로 할당된 2번 노드를 찾고, 그 다음 2번 노드의 부모 노드인 1번 노드를 찾아 3번 노드는 1번 노드까지 연결되어있다는 사실을 파악할 수 있다. 
이는 재귀 함수를 통해 확인할 수 있다. 1번 노드는 "1"이기 때문에 1번 노드와 3번 노드를 비교하면 3번 노드는 최종적으로 "1"이 할당된다.
노드 번호: [1, 2, 3, 4, 5, 6, 7, 8]
부모 노드: [1, 1, 1, 4, 5, 6, 7, 8]
