이중 연결 리스트(DoublyLinkedList)는 앞에서 살펴본 단일 연결 리스트에서 이전의 노드를 가리키는 포인터를 하나 더하는 것 뿐이다.
그러니까 각각의 노드에 포인터가 두 개씩 있게 된다.
이중 연결 리스트는 이처럼 반대 방향 포인터도 갖게 되어 성능상 유연함을 갖게 됐지만, 더 많은 메모리가 필요하게 됐다.

이중 연결 리스트의 성능
삽입이나 제거: O(1)
탐색이나 접근: O(N)(탐색의 시간복잡도는 정확하게 보면 O(N/2)이나, Big O에 의하면 여전히 O(N)이다)


이중 연결 리스트는 이전 노드를 향하는 포인터가 추가됐다는 점만 빼면 단일 연결 리스트와 비슷한 편이다.
이중 연결 리스트는 노드를 찾을 때는 단일 연결리스트에 비해 시간을 절반으로 줄일 수 있다.
이 외의 이중 연결 리스트의 시간복잡도는 단일 연결 리스트의 성능과 같다.
그러나 이중 연결 리스트는 포인터를 하나 추가하여 더 많은 메모리가 필요하다는 점이 단점이다.
